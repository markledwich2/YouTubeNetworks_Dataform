config {
  tags: ['standard']
}

CREATE OR REPLACE FUNCTION public.timeSpanToSeconds(ts string)
  RETURNS double
  LANGUAGE JAVASCRIPT
  AS '
var parts = TS.split(":") // split it at the colons
var dayParts = parts[0].split(".")
var daySecs = dayParts.length > 1 ?
    +dayParts[0] * 24 * 60 * 60 + dayParts[1] * 60 * 60 :
    dayParts[0] * 60 * 60
var minSecs = +parts[1] * 60
var secSecs = +parts[2] // ss.ms just works because it is decimal

// minutes are worth 60 seconds. Hours are worth 60 minutes.
return daySecs + minSecs + secSecs

'
---
CREATE OR REPLACE FUNCTION public.arrayExclude(items array, exclude array)
  RETURNS array
  LANGUAGE JAVASCRIPT
  AS '
  return ITEMS ? ITEMS.filter(v => !EXCLUDE.includes(v)) : undefined
'

---
create or replace function public.regexMatchAll(input string,pattern string,flags string)
  returns array
  language javascript
as
'function regexMatchAll(input, pattern, flags) {
 let re = new RegExp(pattern, flags ? flags + "g" : "g")
 let res = []
 let m;
 while (m = re.exec(input))
   res.push(m.groups)
 return res
}

return regexMatchAll(INPUT, PATTERN, FLAGS)
'


---
create or replace function public.regexMatch(input string,pattern string,flags string)
  returns object 
  language javascript
as
'function regexMatch(input, pattern, flags) {
 var res = new RegExp(pattern, flags).exec(input)
 return res ? res.groups : {};
}
return regexMatch(INPUT, PATTERN, FLAGS)
'

---
create or replace function public.domainToPlatform(domain string)
  returns string
  as
  $$
    decode(domain, 'bitchute.com', 'BitChute', 'rumble.com', 'Rumble', 'youtube.com', 'YouTube', 'youtu.be', 'YouTube', 'parler.com', 'Parler')
  $$
  
