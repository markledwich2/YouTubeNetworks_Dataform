config {
  type: "table",
  tags:['standard'],
  dependencies:['channel_latest', 'video_latest', 'yt_udf']
}

with u as (
  select v.description, v.channel_id, v.video_id
  from video_latest v
         left join channel_latest c on v.channel_id=c.channel_id
  union all
  select description, channel_id, null video_id
  from channel_latest
)
   , s2 as (
  select u.channel_id
       , u.video_id
       , lower(m.value:domain::string) domain
       , m.value: url::string url
  , u.description
  from u
         left join channel_latest c on u.channel_id=c.channel_id
     , table ( flatten(
      regexmatchall(u.description, '(?<url>(?:https?://)(?:[\\w]*@[\\w]*:)?(?:www\\.)?(?<domain>[\\w-\\.]+)(?:/[\\w-/]+)?)', 'im')
    , outer => true) ) m
  where url is not null -- array_contains('QAnon'::variant, c.tags)
    --and domain in ('bitchute.com','twitch.tv','brighteon.com','rumble.com')-- and u.description like '%rumble.com%'
)
select channel_id, video_id, domain, url, description
from s2

