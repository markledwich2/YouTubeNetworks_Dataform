config {
  type: "incremental",
  uniqueKey:['video_id', 'part', 'offset_seconds', 'entity_type', 'entity_value', 'start_char'],
  tags:['standard'],
  snowflake: {
     clusterBy:['part', 'entity_type', 'entity_value']
  }
}

with entity as (
  select *
  from video_entity_stage_view
  ${ when(incremental(), `where updated > (select max(updated)::string from ${self()})`) }
)
, latest as (
  select * from entity
  qualify row_number() over (partition by video_id, part, offset_seconds order by updated desc)=1
)
select t.video_id
     , t.part
     , t.offset_seconds
     , t.updated
     , e.value: name::string entity_value
     , e.value: type::string entity_type
     , e.value:start_char::int start_char
     , e.value:end_char::int end_char
from latest t
  , lateral flatten(input => entities) e