config {
  type: "incremental",
  tags: ['standard'],
  dependencies: ['video', 'channel_accepted_process'],
}

with s as (
  select v.channel_id
       , v.video_id
       , v.views-coalesce(lag(v.views) over (partition by v.video_id order by v.updated), 0) delta_views
       , v.views total_views
       -- from date is the previous updated date, of if that is missing the upload_date
       -- sometimes the upload date is more recent than uploads (e.g. live stream scheduled in advance 21HQL59EsQY)
       , lag(v.updated) over (partition by v.video_id order by v.updated) prev_date
       , min(upload_date) over (partition by v.video_id order by vl.updated) first_upload_date
       , v.updated
  from video v
         inner join video_latest vl on v.video_id=vl.video_id
  where exists(select * from channel_accepted_process c where v.channel_id=c.channel_id)
   -- and v.channel_id='BitChute|nLPcg68RnP97'
)
select * from s
${ when(incremental(), `where updated > (select max(updated) from ${self()})`) }
-- qualify instead of where to ensure prev_date is found prior to filtering


post_operations {
  alter table ${self()} cluster by (channel_id, video_id)
}