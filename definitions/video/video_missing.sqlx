config {
  type: "view",
  dependencies: ['video_latest', 'channel_latest', 'video', 'channel_accepted'],
  description: `[Deprecated]. Detects potential missing videos. No longer used, as part of the daily update expected videos are queried so that missing videos are detected immediately. See  YtReader/SimpleCollect/CollectDb.cs/VideosForUpdate.`
}

-- no longer used in daily update. Usefull for double checking tho

with channel_latest_update as (
  select v.channel_id
       , v.video_id
       , vl.upload_date
       , v.updated
  from video v
  inner join video_latest vl on v.video_id = vl.video_id
  where exists(select * from channel_accepted c where c.channel_id = v.channel_id)
  --and channel_id = 'UCkv4SxLREmIKoUYzabJX4dQ'
  qualify row_number() over (partition by v.channel_id order by v.updated::date desc, vl.upload_date)=1
)
   , video_latest_no as (
  select *, row_number() over (partition by channel_id order by upload_date desc) video_no
  from video_latest v
  where exists(select * from channel_accepted c where c.channel_id = v.channel_id)
       -- we ca only go back 20k videos, so they will falsely look dead
    qualify video_no<20000
)
   , missing as (
  select v.video_id
       , v.video_title
       , c.channel_title
       , v.channel_id
       , v.video_no
       , v.updated
       , v.upload_date
      , u.updated latest_update
  , datediff(d, v.updated::date, u.updated::date) missing_days
  from video_latest_no v
         -- additional filter on this join for videos updated more recently (by 2 days or more) and has an older upload date
         inner join channel_latest_update u on u.channel_id=v.channel_id and u.upload_date<v.upload_date and missing_days >= 1
         left join channel_latest c on c.channel_id=v.channel_id
)
select *
from missing v