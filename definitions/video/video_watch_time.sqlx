config {
  type: "table"
}


with raw as (
  select $1:averageViewDuration::number avg_watch_time
       , $1:video_id::string video_id
       , $1:duration::int duration
       , iff(metadata$filename like '%Random%', 'random', 'log') source
  from @public.yt_data/import/watch_time/ (pattern => '.*\.json\.gz')
)
   , b1 as (
  select
    floor(power(1.7, ceil(log(1.7, duration)))) as to_s
       , lag(to_s +1, 1, 0) over (order by to_s) as from_s
       , avg(least(avg_watch_time, duration)/duration) pct_watch
      , count(*) as n
  from raw
  where duration>0 --and avg_watch_time > 0
  group by 1
)
, b2 as (
  select from_s
  , iff(from_s = (select max(from_s) from b1), 'NaN', to_s) as to_s
  , pct_watch
  , n
  from b1
)
select * from b2