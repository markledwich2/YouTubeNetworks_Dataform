config { 
    type: 'table',
    dependencies: ['date', 'video'],
    tags: ['standard']
}

-- video view history
with delta as (
    select channel_id,
           video_id,
           video_title,
           views - coalesce(lag(views) over (partition by video_id order by updated), 0) as delta_views,
           -- from date is the previous updated date, of if that is missing the upload_date
           -- sometimes the upload date is more recent than uploads (e.g. live stream scheduled in advance 21HQL59EsQY)
           lag(updated) over (partition by video_id order by updated)::date as prev_date,
           min(upload_date) over (partition by video_id order by updated)::date as first_upload_date,
           updated::date as to_date,
           coalesce(prev_date, least(first_upload_date, to_date)) as from_date,
           --updated::date as to_date,
           date_trunc(month, updated)::date as to_month,
           date_trunc(month, from_date)::date as from_month,
           datediff(months, from_month, to_month) + 1::int as months,
           delta_views / nullif(months, 0) as delta_views_per_month,
           upload_date
           --delta_views /  greatest(datediff(days, from_date, updated), 1) as daily_views,
    from video
),
     months as (select distinct from_month as month from delta),
     vm as (
         select channel_id,
                video_id,
                video_title,
                month,
                sum(delta_views_per_month) as views,
                count(*) as stats_recorded
         from months -- query months and join to delta to spread across months sans updates
                  left join delta d on
             d.from_month <= month and month <= d.to_month
         group by 1, 2, 3, 4
     ),
     s as (
         select m.*,
                c.channel_title,
                c.main_channel_id,
                c.main_channel_title,
                c.ideology,
                c.media,
                v.upload_date,
                v.duration
                --m.views * datediff(seconds, '00:00:00'::time, duration) / 60 / 60 as hours_watched
         from vm m
                  left join channel_stats c on c.channel_id = m.channel_id
                  left join video_stats v on v.video_id = m.video_id
     )
select * from s