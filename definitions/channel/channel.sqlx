config {
  type: "incremental",
  tags: ["standard", 'core', 'channel'],
  dependencies: ['video_latest', 'channel_review', 'channel_sam_import' ],
  uniqueKey:['channel_id', 'updated']
}

with cstage as (
select v:ChannelId::string channel_id
     , coalesce(v:Platform::string, 'YouTube') platform
     , coalesce(v:SourceId::string, iff(platform = 'YouTube', channel_id, null)) source_id
     , v:ChannelTitle::string channel_title
     , v:LogoUrl::string logo_url
     , v:Subs::int subs
     , v:ChannelViews::int channel_views
     , v:Country::string country
     , v:Updated::timestamp_ntz updated
     , v:Status::string status
     , decode(v:Status::string, '1', 'Alive', coalesce(v:Status::string, 'Unknown')) status_msg
     , v:"Subscriptions"::array subscriptions
     , v:Keywords::string keywords
     , v:DefaultLanguage::string default_langauge
     , v:FeaturedChannelIds::array featured_channels
     , v:Description::string description
     , v:DiscoverSource::object discover_source
     , v:SourceIdAlts::array source_id_alts
from channel_stage
where 
    -- Filter out errors. For a day orso, YT collector picked up other platforms and created dead YouTube channels for them
    not (discover_source is not null and platform='YouTube' and updated<='2021-02-06T00:07:00')
    -- Bitchute channels not found didn't prefix their id's
    and not (platform='BitChute' and status_msg='NotFound' and updated<='2021-02-07')
    -- Rumble id's wern't clean and didn't ahve the user/c channel prefix. remove thather than fix
    and not (platform='Rumble' and updated<='2021-02-08' )
    ---- A bunch of Rumble channels were created based on bitchute data. Filter out
    and not (platform='Rumble' and logo_url like 'https://static-3.bitchute.com%' and updated<='2021-05-22' )
)
   , c1 as (
  select *, 'recfluence' as source
  from cstage as cs
  union all
  (select channel_id
      , 'YouTube'
      , null
        , channel_title
        , null as logo_url
        , subs
        , null as channel_views
        , null as country
        , '2020-09-01'::timestamp_ntz as updated
        , null as status
        , null as status_msg
        , null as subscriptions
        , null as keywords
        , null as default_langauge
        , null as featured_channels
        , null as description
        , null as discover_source
        , null::array as source_id_alts
        , 'sam_export' as source
   from channel_sam_import
   where not exists(select * from cstage where cstage.channel_id=channel_sam_import.channel_id))
)
select * from c1
${ when(incremental(), `where updated > (select max(updated) from ${self()})`)}