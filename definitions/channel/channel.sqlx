config {
  type: "incremental",
  tags: ["standard"],
  dependencies: ['video_latest', 'channel_review', 'channel_sam_import' ],
  uniqueKey:['channel_id', 'updated']
}

with cstage as (
  select v:ChannelId::string as channel_id
       , v:ChannelTitle::string as channel_title
       , v:MainChannelId::string as main_channel_id
       , v:LogoUrl::string as logo_url
       , v:Subs::int as subs
       , v:ChannelViews::int as channel_views
       , v:Country::string as country
       , v:Updated::timestamp_ntz as updated
       , v:Status::string as status_msg
       , v:"Subscriptions"::array as subscriptions
       , v:Keywords::string as keywords
       , v:DefaultLanguage::string as default_langauge
       , v:FeaturedChannelIds::array as featured_channels
       , v:Description::string as description
  from channel_stage
)
   , c1 as (
  select *, 'recfluence' as source
  from cstage as cs
  union all
  (select channel_id
        , channel_title
        , null as main_channel_id
        , null as logo_url
        , subs
        , null as channel_views
        , null as country
        , '2020-09-01'::timestamp_ntz as updated
        , null as status_msg
        , null as subscriptions
        , null as keywords
        , null as default_langauge
        , null as featured_channels
        , null as description
        , 'sam_export' as source
   from channel_sam_import
   where not exists(select * from cstage where cstage.channel_id=channel_sam_import.channel_id))
)
select * from c1
${ when(incremental(), `where updated > (select max(updated) from ${self()})`)}