config {
  type: "table",
  tags: ["standard"],
  dependencies: ['channel_recs_monthly', 'channel_latest', 'video_stats_monthly']
}

-- channel_stats_Monthly
with r as (
    select from_channel_id as channel_id
         , rec_month
         , sum(relevant_impressions) as relevant_impressions
         , sum(relevant_impressions_in) as relevant_impressions_in
    from channel_recs_monthly
         -- for channel stats. Exclude recs to outside channels, otherwise the net impressions are unbalanced
    where exists(select c.channel_id from channel_latest c where c.channel_id = to_channel_id)
    group by 1, 2
)
   , channel_views as (
    select channel_id, month, sum(views) as video_views
    from video_stats_monthly
    group by channel_id, month
)
   , s as (
    select r.rec_month as month
         , cv.video_views -- video views for each month. Can be aggregated
         , c.*
         , r.relevant_impressions
         , r.relevant_impressions_in
         , (relevant_impressions_in / nullif(relevant_impressions, 0) - 1) as relevant_impressions_advantage
         , subs > 10000
        or channel_lifetime_daily_views > (
                             select avg(channel_lifetime_daily_views / subs)
                             from channel_latest
                             where subs > 0
                         ) * 10000 as meets_subsviews_criteria
    from r
             left join channel_latest c on r.channel_id = c.channel_id
             left join channel_views cv on r.channel_id = cv.channel_id and r.rec_month = cv.month
)
select *
from s