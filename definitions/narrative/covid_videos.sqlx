config {
  type: "table",
  dependencies:['video_latest', 'caption', 'covid_discover']
}

with
  covid_caption_vids as (
    select c.video_id, array_agg(object_construct('offset',offset_seconds,'caption',caption)) captions, arrayuniq(arrayflatten(array_agg(words))) words
    from (
      select c.*, covidwords(caption) words
      from caption c
             join video_latest vl on vl.video_id=c.video_id
      where array_size(words)>0
        --and channel_id in ('UCupvZG-5ko_eiXAupbDfxWw')
      --qualify row_number() over (partition by c.video_id order by offset_seconds::int)<=10
    ) c
    group by c.video_id
  )
  , covid_title_vids as (
  select video_id, arrayuniq(array_cat(covidwords(video_title),covidwords(description))) words
  from video_latest
  where
     array_size(words)>0
    -- and channel_id in ('UCupvZG-5ko_eiXAupbDfxWw')
)

  , u as (
  select v.video_id, vl.video_title, vl.channel_id, vl.channel_title, words, captions, cd.froms posts
  from (
    select coalesce(cv.video_id,tv.video_id) video_id
         , arrayuniq(array_cat(coalesce(cv.words,array_construct()),coalesce(tv.words,array_construct()))) words
         , cv.captions
    from covid_caption_vids cv
           left outer join covid_title_vids tv on tv.video_id=cv.video_id
  ) v
         left join video_latest vl on vl.video_id=v.video_id
         left join covid_discover cd on cd.video_id=v.video_id
)
select *
from u