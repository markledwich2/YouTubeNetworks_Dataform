config {
  type: "table",
  dependencies: ['video_latest', 'caption'],
  description: `Mentions of terms of interest to comcast`
}

js {
  const terms = [
    ['comcast', /(?<![\w]|(\w\.))comcast(?![\w]|(\.\w))/i],  
    '5g', 
    'net neutrality', 
    // roberts in a caption with comcast
    ['Brian Roberts', c=> `${mentions.termMatch(c, 'roberts')} and ${mentions.termMatch(c, /(?<![\w]|(\w\.))comcast(?![\w]|(\.\w))/i)}`], 
    // any exec mentions with comcast
    ['Comcast Exec', c=> `${mentions.termMatch(c, /\b(ceo|executive|cfo|leadership|roberts|robert|clo|cavanagh|reid|armstrong|cohen)\b/i)} and ${mentions.termMatch(c, /(?<![\w]|(\w\.))comcast(?![\w]|(\.\w))/i)}`], 
  ] // filter to videos matching these
  const parts = ['title', 'caption']
}

with term_vids as (
  with comcast_connectivity as (
          select  $2::string video_id, $3::int offset_seconds
    from @public.yt_data/import/narratives/comcast_all_mentions.zsl_connectivity_pred_v2.pos_pred.tsv.gz (file_format => tsv_header)
    )
   , vids as (
    select video_id from video_latest
    where upload_date > '2019-01-01'
    --and video_id in ('AGZhU6oQUo', 'zqyfCRkayRs', 'VyEf4EBXe8o', 'mipSPvvz05A', 'I9_H4ZnHuoI', '9aWT6lznOhI', '7uQuHU6DHB8')
  )
  , mentions as (
      ${mentions.mentionsSelect(terms, 'vids', parts)}
  )
  select n.value::string narrative
    , s.video_id
    , array_append(s.matches, iff(exists(select * from comcast_connectivity c where c.video_id = s.video_id), 'connectivity', 'non-connectivity')) matches
    , context, part, offset_seconds
  from mentions s
  , lateral flatten(input => s.matches) n -- context term matches are narratives, and suppliment matches are mention leywords
)
, import_vids as (
    with m2 as (
        select 'Jews Control Media' narrative, $2::string video_id, $3::int offset_seconds, $10::string caption
        from @public.yt_data/import/narratives/jewish_media_all_mentions.zsl_antisem_pred_v1.pos_pred.tsv.gz (file_format => tsv_header)
    )
  select narrative, video_id, null matches, caption context, 'caption' part, offset_seconds
  from m2
)
, u as (
  select * from term_vids union all select * from import_vids
)
select * from u
