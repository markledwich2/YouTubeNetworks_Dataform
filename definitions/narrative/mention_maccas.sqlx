config {
  type: "table",
  dependencies: ['video_latest', 'caption'],
  description: `Mentions of Macdonald's and sub-narratives`
}

js {
  const parts = ['title', 'description', 'caption']
  const maccasRe = /\b(Mc Donald's|McDonald's|Macca'?s|Mickey D('s)?|Mickey Deez|Golden Arches)\b/i
  const termAndMaccas = (c, terms) => `${mentions.termMatch(c, terms)} and ${mentions.termMatch(c, maccasRe)}`
}

with vids as (select * from video_latest where upload_date >= '2019-01-01')
, all_mentions as (select video_id, matches, context, part, offset_seconds from mention_maccas_all)
, maccas_vids as (select distinct video_id from all_mentions)
, sub_mentions as (${mentions.mentionsSelect([
  ['maccas-ceo',  c => termAndMaccas(c, /\b(ceo|easterbrook)\b/i)],
  ['maccas-veg',  c => termAndMaccas(c,/\b(veg|vegetarian|vegan)\b/i)],
  ['maccas-union',  c => termAndMaccas(c, /\b(?<!(soviet|european)\W)(union|((?<!(counter|military|copyright)\W)(strike|striking)(?!\W(force|me|characteristics|color))))\b/i)]
], 'maccas_vids', parts)})
, unhealthy_mentions as (
    with m2 as (
        select $2::string video_id, $3::int offset_seconds, $10::string caption
        from @public.yt_data/import/narratives/mcdonalds_all_mentions.zsl_unhealthy_pred_v1.pred_095.tsv.gz (file_format => tsv_header)
    )
  select video_id, array_construct('maccas-unhealthy') matches, caption context, 'caption' part, offset_seconds
  from m2
), fired_mentions as (
    with m2 as (
        select $2::string video_id, $3::int offset_seconds, $10::string caption
        from @public.yt_data/import/narratives/mcdonalds_ceo_mentions.zsl_ceo_fired_pred_v1.pred_090.tsv.gz (file_format => tsv_header)
    )
  select video_id, array_construct('maccas-fired') matches, caption context, 'caption' part, offset_seconds
  from m2
)
, u as (
  ${util.union(['all_mentions', 'sub_mentions', 'unhealthy_mentions', 'fired_mentions'])}
)
select n.value::string narrative, u.*
  from u, lateral flatten(input => u.matches) n